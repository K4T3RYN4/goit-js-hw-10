{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nconst buttonEl = document.querySelector('[data-start]');\n\nlet userSelectedDate = null;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n\n        if (selectedDates[0] < new Date()) {\n            iziToast.warning({\n                title: 'Warning!',\n                message: 'Please choose a date in the future',\n                position: 'topRight'\n            });\n        } else {\n            userSelectedDate = selectedDates[0];\n            buttonEl.removeAttribute('disabled')\n        }\n    },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction startTimer() {\n    if (!userSelectedDate) return;\n    buttonEl.setAttribute('disabled', true);\n\n    const timerId = setInterval(() => {\n        const diff = userSelectedDate - Date.now();\n\n        if (diff <= 0) {\n            clearInterval(timerId);\n            return;\n        }\n\n        const { days, hours, minutes, seconds } = convertMs(diff);\n\n        daysEl.textContent = addLeadingZero(String(days));\n        hoursEl.textContent = addLeadingZero(String(hours));\n        minutesEl.textContent = addLeadingZero(String(minutes));\n        secondsEl.textContent = addLeadingZero(String(seconds));\n    }, 1000);\n}\n\nbuttonEl.addEventListener('click', startTimer);\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\n\nfunction addLeadingZero(value) {\n    return value.padStart(2, '0');\n}\n"],"names":["daysEl","hoursEl","minutesEl","secondsEl","buttonEl","userSelectedDate","options","selectedDates","iziToast","flatpickr","startTimer","timerId","diff","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"+IAMA,MAAMA,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEnDC,EAAW,SAAS,cAAc,cAAc,EAEtD,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAEfA,EAAc,CAAC,EAAI,IAAI,KACvBC,EAAS,QAAQ,CACb,MAAO,WACP,QAAS,qCACT,SAAU,UAC1B,CAAa,GAEDH,EAAmBE,EAAc,CAAC,EAClCH,EAAS,gBAAgB,UAAU,EAE1C,CACL,EAEAK,EAAU,mBAAoBH,CAAO,EAErC,SAASI,GAAa,CAClB,GAAI,CAACL,EAAkB,OACvBD,EAAS,aAAa,WAAY,EAAI,EAEtC,MAAMO,EAAU,YAAY,IAAM,CAC9B,MAAMC,EAAOP,EAAmB,KAAK,IAAG,EAExC,GAAIO,GAAQ,EAAG,CACX,cAAcD,CAAO,EACrB,MACH,CAED,KAAM,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EAExDZ,EAAO,YAAckB,EAAe,OAAOL,CAAI,CAAC,EAChDZ,EAAQ,YAAciB,EAAe,OAAOJ,CAAK,CAAC,EAClDZ,EAAU,YAAcgB,EAAe,OAAOH,CAAO,CAAC,EACtDZ,EAAU,YAAce,EAAe,OAAOF,CAAO,CAAC,CACzD,EAAE,GAAI,CACX,CAEAZ,EAAS,iBAAiB,QAASM,CAAU,EAE7C,SAASO,EAAUE,EAAI,CAQnB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAGA,SAASE,EAAeE,EAAO,CAC3B,OAAOA,EAAM,SAAS,EAAG,GAAG,CAChC"}